# -*- coding: utf-8 -*-
"""Supply Chain Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XortB0jKF2Y1Z_v6WpJaWmwl9nUFBsk3

**Supply Chain Analysis**
"""

import pandas as pd
import plotly.express as px
import plotly.io as pio
import plotly.graph_objects as go
pio.templates.defult = "plotlt_white"

data = pd.read_csv("/supply_chain_data.csv")
data.head()

data.describe()

"""Relationship between the price of the products and the revenue"""

fig = px.scatter(data,x='Price',y='Revenue generated',color='Product type',hover_data=['Number of products sold'],trendline='ols')
fig.show()

sales_data= data.groupby('Product type')['Number of products sold'].sum().reset_index()
print(sales_data)

pie_chart= px.pie(sales_data,values='Number of products sold',names='Product type',title='Sales by product type',hover_data='Number of products sold',hole=0.5,color_discrete_sequence=px.colors.qualitative.Pastel)
pie_chart.update_traces(textposition='inside', textinfo='percent+label')
pie_chart.show()

"""Total revenue generated from shipping carriers"""

total_revenue = data.groupby('Shipping carriers')['Revenue generated'].sum().reset_index()

fig = go.Figure()
fig.add_trace(go.Bar(x=total_revenue['Shipping carriers'],y=total_revenue['Revenue generated']))
fig.update_layout(title='Total Revenue by Shipping Carrier',xaxis_title='Shipping Carrier',yaxis_title='Revenue Generated')
fig.show()

""" Average lead time and Average Manufacturing Costs for all products of the company"""

avg_lead_time= data.groupby('Product type')['Lead time'].mean().reset_index()
avg_manu_cost= data.groupby('Product type')['Manufacturing costs'].mean().reset_index()
result=pd.merge(avg_lead_time,avg_manu_cost,on='Product type')
result.rename(columns={'Lead time': 'Average Lead Time','Manufactring cost':'Average Manufactring Cost'},inplace=True)
result

"""Revenue generated by each SKU"""

revenue_sku = px.line(data,x='SKU', y='Revenue generated',title='Revenue Generated by SKU')
revenue_sku.show()

"""Stock levels of each SKU"""

stock_level=px.line(data,x='SKU', y='Stock levels',title='Stock Level by SKU')
stock_level.show()

"""Order quantity of each SKU"""

order_quant= px.bar(data,x='SKU',y='Order quantities',title='order quantity by SKU')
order_quant.show()

"""Cost Analysis"""

shipping_cost_chart = px.bar(data, x='Shipping carriers',y='Shipping costs',title='Shipping Costs by Carrier')
shipping_cost_chart.show()

"""Transportation mode"""

transportation_chart = px.pie(data,values='Costs', names='Transportation modes',title='Cost Distribution by Transportation Mode',hole=0.5,color_discrete_sequence=px.colors.qualitative.Pastel)
transportation_chart.show()

"""Defect Rate"""

defect_rates_by_product = data.groupby('Product type')['Defect rates'].mean().reset_index()

fig = px.bar(defect_rates_by_product, x='Product type', y='Defect rates',title='Average Defect Rates by Product Type')
fig.show()

"""Defect rates by mode of transportation"""

pivot_table = pd.pivot_table(data, values='Defect rates', index=['Transportation modes'], aggfunc='mean')

transportation_chart = px.pie(values=pivot_table["Defect rates"],names=pivot_table.index,title='Defect Rates by Transportation Mode',hole=0.5,color_discrete_sequence=px.colors.qualitative.Pastel)
transportation_chart.show()

